import random
import colorama
from colorama import Fore, Back
colorama.init(autoreset=True)
from math_attention import math_attention

# –≥–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è


def operations():
    while True:
        try:
            operation = int(input(
                f"{Fore.WHITE}{Back.WHITE}\n1 - —Ä–æ–∑–ø–æ–¥—ñ–ª–∏—Ç–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏\n2 - –ø–æ—Ö–≤–∞–ª–∞ –¥–ª—è —É—á–Ω—è\n3 - —Ö—Ç–æ –π–¥–µ –¥–æ –¥–æ—à–∫–∏?\n4 - —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Ö–≤–∞–ª—É –¥–ª—è —É—á–Ω—è\n6 - –≤–∏–π—Ç–∏\n–í–∞—à –≤–∏–±—ñ—Ä: "))
        except ValueError:
            print(f"{Fore.RED}–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ: ")
            continue

        if operation == 1:
            create_teams()
        elif operation == 2:
            create_congrats()
        elif operation == 3:
            single_students()
        elif operation == 4:
            new_note()
        elif operation == 7:
            while True:
                try:    
                    choice2 = int(input(
                    f"{Fore.WHITE}{Back.WHITE}\n1 - –î–æ–¥–∞–≤–∞–Ω–Ω—è\n2 - –í—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è\n3 - –ú–Ω–æ–∂–µ–Ω–Ω—è\n4 - –î—ñ–ª–µ–Ω–Ω—è\n5 - –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å\n–í–∞—à –≤–∏–±—ñ—Ä: "))
                except ValueError:
                    print(f"{Fore.RED}–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ: ")
                    continue

                if choice2 == 1:
                    create_teams()
                elif choice2 == 2:
                    math_attention()
                elif choice2 == 3:
                    single_students()
                elif choice2 == 4:
                    new_note()
        
                elif operation == 5:
                    print("–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏...")
                    break
                else:
                    print(f"{Fore.RED}üÜò –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∏–π —Ç–∏–ø –¥–∞–Ω–∏—Ö!")

# –¥—ñ—Å—Ç–∞—î –æ–¥–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞


def single_students() -> None:
    stud_list = get_students()
    if not stud_list:
        print(f"{Fore.RED}üÜò –°–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π, —Å–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å —Å–ø–∏—Å–æ–∫!")
        return
    single_student = random.choice(stud_list)
    print(f"{Fore.GREEN}{single_student}")

# –∫–æ–Ω–≤–µ—Ä—Ç—É—î —Ñ–∞–π–ª –ø–æ—Ö–≤–∞–ª–∏


def get_congrats() -> list:
    with open("C:/Users/Anna/Downloads/teacher_app/congrats.txt", "r", encoding="utf-8") as f:
        return [line.strip() for line in f]

# –≤–∏–≤–æ–¥–∏—Ç—å –æ–¥–Ω—É –ø–æ—Ö–≤–∞–ª—É


def create_congrats() -> None:
    cong_list = get_congrats()
    if not cong_list:
        print(f"{Fore.RED}üÜò –°–ø–∏—Å–æ–∫ –ø–æ—Ö–≤–∞–ª–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π, —Å–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å —Å–ø–∏—Å–æ–∫!")
        return
    congratul_message = random.choice(cong_list)
    print(f"{Fore.GREEN}{congratul_message}")

# –∫–æ–Ω–≤–µ—Ä—Ç—É—î —Ñ–∞–π–ª —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤


def get_students() -> list:
    with open("C:/Users/Anna/Downloads/teacher_app/children.txt", "r", encoding="utf-8") as f:
        return [line.strip() for line in f if line.strip()]

# —Ä–æ–∑–ø–æ–¥—ñ–ª—è—î –∫–æ–º–∞–Ω–¥–∏ –∑—ñ —Å–ø–∏—Å–∫—É


def create_teams():
    stud_list = get_students()

    if not stud_list:
        print(f"{Fore.RED}üÜò –°–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π, —Å–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å —Å–ø–∏—Å–æ–∫üò°")
        return

    random.shuffle(stud_list)
    quantity_of_students = len(stud_list)
    try:
        team_quantity = int(input("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–∂–∞–Ω–∏—Ö –∫–æ–º–∞–Ω–¥: "))
    except ValueError:
        print(f"{Fore.RED}–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∏–π —Ç–∏–ø –¥–∞–Ω–∏—Ö!")
        return

    if team_quantity <= 0 or team_quantity > quantity_of_students:
        print(f"{Fore.RED}–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–∞–Ω–¥")

    teams = [[] for _ in range(team_quantity)]

    for i, student in enumerate(stud_list):
        teams[i % team_quantity].append(student)

    for i, team in enumerate(teams, 1):
        print(f"{Fore.GREEN}\n–ö–æ–º–∞–Ω–¥–∞ {i}:")
        for student in team:
            print(f"{Fore.GREEN} - {student}")

# —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ö–≤–∞–ª–∏


def new_note() -> dict:
    notes = {}
    stud_list = get_students()
    print(f"{Fore.GREEN}\n–£—á–Ω—ñ:")
    for i, student in enumerate(stud_list):
        print(f"{Fore.GREEN}{i + 1}. {student}")
    try:
        choice = int(input("–Ø–∫–æ–º—É –Ω–æ–º–µ—Ä—É —É—á–Ω—è –≤–∏ —Ö–æ—á–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º—ñ—Ç–∫—É?"))
    except ValueError:
        print(f"{Fore.RED}üÜò –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∏–π —Ç–∏–ø –¥–∞–Ω–∏—Ö!")
        return

    if choice > len(stud_list) or choice <= 0:
        print(f"{Fore.RED}üÜò –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–µ —á–∏—Å–ª–æ!")
        return
    student = stud_list[choice - 1]
    note = input(f"–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∏–º—ñ—Ç–∫—É –¥–ª—è {student}: ")
    notes[student] = note
    save_notes(notes)
    print(f"{Fore.GREEN}‚úÖ –ü—Ä–∏–º—ñ—Ç–∫—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
    return notes

# —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ö–≤–∞–ª–∏ –≤ —Ñ–∞–π–ª—ñ


def save_notes(notes):
    with open("C:/Users/Anna/Downloads/teacher_helper/admire.txt", "a", encoding="utf-8") as f:
        for name, note in notes.items():
            f.write(f"{name}: {note}\n")


# –∑–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó


if __name__ == "__main__":
    operations()
